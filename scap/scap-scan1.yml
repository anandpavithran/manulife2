- name: Run OpenSCAP scan with tailored profile and upload results to GitHub
  hosts: all
  become: true
  vars:
    scap_content_file: /usr/share/xml/scap/ssg/content/ssg-rhel8-ds.xml
    tailored_file: /tmp/Workshop.xml
    report_file: /tmp/openscap-tailored-report.html
    result_file: /tmp/openscap-tailored-results.xml
    local_report_dir: ./reports
    github_repo_path: /tmp/myscap  # Local clone of GitHub repo

  tasks:
    - name: Install required packages
      ansible.builtin.dnf:
        name:
          - openscap-scanner
          - scap-security-guide
          - git
          - httpd
        state: present
    - name:  start webserver
      ansible.builtin.service:
        name: httpd
        state: started
        enabled: yes
    - name: Open firewall
      ansible.posix.firewalld:
        service: http
        state: enabled
        immediate: true
        permanent: yes

    - name: Copy tailored profile file to target
      ansible.builtin.copy:
        src: files/Workshop.xml
        dest: "{{ tailored_file }}"
        mode: '0644'

    - name: Run OpenSCAP scan with tailored file
      ansible.builtin.command: >
        oscap xccdf eval
        --tailoring-file {{ tailored_file }}
        --profile xccdf_org.ssgproject.content_profile_stig_custom1
        --results {{ result_file }}
        --report {{ report_file }}
        "{{scap_content_file}}" 2>/dev/null
      async: 1800
      poll: 30  
      register: scan_output
      ignore_errors: yes

    - name: Show scan results summary
      ansible.builtin.debug:
        msg: "{{ scan_output.stdout }}"

    - name: Fetch HTML scan report to control node
      ansible.builtin.fetch:
        src: "{{ report_file }}"
        dest: "{{ local_report_dir }}/"
        flat: yes

    - name: Fetch XML scan result to control node
      ansible.builtin.fetch:
        src: "{{ result_file }}"
        dest: "{{ local_report_dir }}/"
        flat: yes
    - name: create fir
      ansible.builtin.file:
        path: /var/www/html/reports
        state: directory
        owner: apache
        group: apache

    - name: Copy scan reports 
      ansible.builtin.copy:
        src: "{{ local_report_dir }}/"
        dest: /var/www/html/reports
        mode: '0644'


